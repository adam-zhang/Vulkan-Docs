// WARNING: DO NOT MODIFY! This file is automatically generated from the vk.xml registry
ifndef::doctype-manpage[]
.Valid Usage
********************************************************************************
endif::doctype-manpage[]
ifdef::doctype-manpage[]
Valid Usage
-----------
endif::doctype-manpage[]
* pname:device must: be a valid sname:VkDevice handle
* pname:pAllocateInfo must: be a pointer to a valid sname:VkMemoryAllocateInfo structure
* If pname:pAllocator is not `NULL`, pname:pAllocator must: be a pointer to a valid sname:VkAllocationCallbacks structure
* pname:pMemory must: be a pointer to a sname:VkDeviceMemory handle
* The number of currently valid memory objects, allocated from pname:device, must: be less than sname:VkPhysicalDeviceLimits::pname:maxMemoryAllocationCount
ifndef::doctype-manpage[]
********************************************************************************
endif::doctype-manpage[]

ifndef::doctype-manpage[]
.Return Codes
********************************************************************************
endif::doctype-manpage[]
ifdef::doctype-manpage[]
Return Codes
------------
endif::doctype-manpage[]
ifndef::doctype-manpage[]
<<fundamentals-successcodes,Success>>::
endif::doctype-manpage[]
ifdef::doctype-manpage[]
On success, this command returns::
endif::doctype-manpage[]
* ename:VK_SUCCESS
ifndef::doctype-manpage[]
<<fundamentals-errorcodes,Failure>>::
endif::doctype-manpage[]
ifdef::doctype-manpage[]
On failure, this command returns::
endif::doctype-manpage[]
* ename:VK_ERROR_OUT_OF_HOST_MEMORY
* ename:VK_ERROR_OUT_OF_DEVICE_MEMORY
* ename:VK_ERROR_TOO_MANY_OBJECTS
ifndef::doctype-manpage[]
********************************************************************************
endif::doctype-manpage[]

