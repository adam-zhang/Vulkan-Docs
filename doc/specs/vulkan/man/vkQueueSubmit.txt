vkQueueSubmit(3)
=================

Name
----
vkQueueSubmit - Submits a sequence of semaphores or command buffers to a queue.

C Specification
---------------

include::../protos/vkQueueSubmit.txt[]

Parameters
----------

pname:queue::
    The queue to which to submit work.

pname:submitCount::
    The number of submissions to make.

pname:pSubmits::
    The address of an array of pname:submitCount slink:VkSubmitInfo
    structures to submit to pname:queue.

pname:fence::
    An optional fence object that will be signaled when all command buffers referenced in
    pname:pSubmits have completed execution.

Description
-----------

fname:vkQueueSubmit makes one or more submissions to a the queue specified in pname:queue.
Each submision is represented by an element of an array of slink:VkSubmitInfo structures,
the address of which is specified in pname:pSubmits. The length of the array is
given by pname:submitCount. If pname:submitCount is zero then, pSubmits may be code:NULL,
in which case, no work is submitted to the queue. The definition of slink:VkSubmitInfo
is:

include::../structs/VkSubmitInfo.txt[]

If the pname:waitSemaphoreCount member of slink:VkSubmitInfo is not zero,
then pname:pWaitSemaphores is a pointer to an array of
pname:waitSemaphoreCount sname:VkSemaphore handles which will be waited on
before any further work is performed by the queue.

After all semaphores specified in pname:pWaitSemaphores (if any) have become
signaled, the command buffers specified in pname:pCommandBuffers are
executed and those semaphores are again reset to the unsignaled state.
pname:pCommandBuffers is a pointer to an array of pname:commandBufferCount
sname:VkCommandBuffer handles to the command buffers to execute. If
pname:commandBufferCount is zero then pname:pCommandBuffers may be code:NULL
and no work is performed on the queue as a result.

After all work specified in pname:pCommandBuffers (if any) has completed,
the semaphores specified in pname:pSignalSemaphores are signaled.
pname:pSignalSemaphores is a pointer to an array of
pname:signalSemaphoreCount sname:VkSemaphore handles. If
pname:signalSemaphoreCount is zero then pname:pSignalSemaphores may be
code:NULL.

pname:fence is an optional handle to a fence which, if not code:VK_NULL_HANDLE, is
signaled when execution of the all elements of pname:pCommandBuffers in pname:pSubmits is completed.
If pname:submitCount is zero, but pname:fence is not code:NULL, the fence will still
be submitted to the queue and will become signaled when all work previusly submitted
to the queue has completed.

An implementation may, at its option, choose to merge the submissions specified in
pname:pSubmits, but at least one submission is made to the queue and the work represented
by pname:pSubmits is guaranteed to complete in finite time.

include::../validity/protos/vkQueueSubmit.txt[]

See Also
--------

flink:vkBeginCommandBuffer, flink:vkEndCommandBuffer, flink:vkCreateSemaphore

include::footer.txt[]
