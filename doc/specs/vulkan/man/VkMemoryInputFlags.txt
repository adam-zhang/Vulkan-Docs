VkMemoryInputFlags(3)
=====================

Name
----
VkMemoryInputFlags - Memory input coherency control flags.

C Specification
---------------

include::../flags/VkMemoryInputFlags.txt[]

Constants
---------

ename:VK_MEMORY_INPUT_HOST_READ_BIT::
    Controls input coherency of host reads. +
    Using this flag allows the result of prior commands to be visible to subsequent host reads.

ename:VK_MEMORY_INPUT_INDIRECT_COMMAND_BIT::
    Controls input coherency of indirect command reads. +
    Using this flag allows the result of prior commands to be visible to subsequent indirect commands. +
    May trigger the invalidation of any device caches involved in indirect command reads.

ename:VK_MEMORY_INPUT_INDEX_FETCH_BIT::
    Controls input coherency of index fetches. +
    Using this flag allows the result of prior commands to be visible to subsequent index fetches. +
    May trigger the invalidation of any device caches involved in index fetches.

ename:VK_MEMORY_INPUT_VERTEX_ATTRIBUTE_FETCH_BIT::
    Controls input coherency of vertex attribute fetches. +
    Using this flag allows the result of prior commands to be visible to subsequent vertex attribute fetches. +
    May trigger the invalidation of any device caches involved in vertex attribute fetches.

ename:VK_MEMORY_INPUT_UNIFORM_READ_BIT::
    Controls input coherency of uniform reads. +
    Using this flag allows the result of prior commands to be visible to subsequent uniform reads. +
    May trigger the invalidation of any device caches involved in uniform reads.

ename:VK_MEMORY_INPUT_SHADER_READ_BIT::
    Controls input coherency of shader reads. +
    Using this flag allows the result of prior commands to be visible to subsequent shader reads. +
    May trigger the invalidation of any device caches involved in shader reads.

ename:VK_MEMORY_INPUT_COLOR_ATTACHMENT_BIT::
    Controls input coherency of color attachment reads. +
    Using this flag allows the result of prior commands to be visible to subsequent color attachment reads. +
    May trigger the invalidation of any device caches involved in color attachment reads.

ename:VK_MEMORY_INPUT_DEPTH_STENCIL_ATTACHMENT_BIT::
    Controls input coherency of depth/stencil attachment reads. +
    Using this flag allows the result of prior commands to be visible to subsequent depth/stencil attachment reads. +
    May trigger the invalidation of any device caches involved in depth/stencil attachment reads.

ename:VK_MEMORY_INPUT_INPUT_ATTACHMENT_BIT::
    Controls input coherency of input attachment reads. +
    Using this flag allows the result of prior commands to be visible to subsequent input attachment reads. +
    May trigger the invalidation of any device caches involved in input attachment reads.

ename:VK_MEMORY_INPUT_TRANSFER_BIT::
    Controls input coherency of transfer operations. +
    Using this flag allows the result of prior commands to be visible to subsequent transfer operations. +
    May trigger the invalidation of any device caches involved in the transfer operation.

Description
-----------

These flags are used in the slink:VkMemoryBarrier, slink:VkBufferMemoryBarrier, and slink:VkImageMemoryBarrier structures
passed to the commands flink:vkCmdWaitEvents and flink:vkCmdPipelineBarrier.

The flags are always used in conjunction with a set of memory output coherency control flags that are defined in
elink:VkMemoryOutputFlags.

Using these flags alone does not necessarily guarantee that the outputs of all previous commands are visible to
the specified inputs. In order to ensure that a particular type of output is visible on the inputs the corresponding
memory output coherency control flag should also be specified in the current or a prior memory barrier structure.

See Also
--------

elink:VkMemoryOutputFlags, slink:VkMemoryBarrier, slink:VkBufferMemoryBarrier, slink:VkImageMemoryBarrier,
flink:vkCmdWaitEvents, flink:vkCmdPipelineBarrier

include::footer.txt[]
