VkDescriptorType(3)
===================

Name
----
VkDescriptorType - Specifies the type of a descriptor in a descriptor set.

C Specification
---------------

include::../enums/VkDescriptorType.txt[]

Constants
---------

ename:VK_DESCRIPTOR_TYPE_SAMPLER::
    Identifies a sampler descriptor which refers the state of a sampler object. +
    A descriptor of this type enables shaders to perform filtered sampling of any compatible image
    resource using the referenced sampler in conjunction with a corresponding sampled image descriptor.

ename:VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER::
    Identifies a combined image sampler descriptor which refers the state of a sampler object
    and an image view object being in a compatible image layout. +
    A descriptor of this type enables shaders to perform filtered or unfiltered sampling of the
    referenced image view using the referenced sampler. +
    This descriptor type is compatible with image views having one of the following image layouts:
    ename:VK_IMAGE_LAYOUT_GENERAL, ename:VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
    or ename:VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL. +
    This descriptor type is compatible with image views of image objects created with the
    ename:VK_IMAGE_USAGE_SAMPLED_BIT usage flag.

ename:VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE::
    Identifies a sampled image descriptor which refers the state of an image view object being in a
    compatible image layout. +
    A descriptor of this type enables shaders to perform unfiltered sampling of the referenced image
    view, or can be used in conjunction with a sampler descriptor to perform filtered sampling of the
    referenced image view. +
    This descriptor type is compatible with image views in any of the following layouts:
    ename:VK_IMAGE_LAYOUT_GENERAL, ename:VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
    or ename:VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL. +
    This descriptor type is compatible with image views of image objects created with the
    ename:VK_IMAGE_USAGE_SAMPLED_BIT usage flag.

ename:VK_DESCRIPTOR_TYPE_STORAGE_IMAGE::
    Identifies a storage image descriptor which refers the state of an image view object being in a
    compatible image layout. +
    A descriptor of this type enables shaders to perform loads, stores, and atomic operations on the
    referenced image view. +
    This descriptor type is compatible with image views in any of the following layouts:
    ename:VK_IMAGE_LAYOUT_GENERAL or ename:VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL.
    However, stores and atomic operations can only be performed on image views in the
    ename:VK_IMAGE_LAYOUT_GENERAL layout. +
    This descriptor type is compatible with image views of image objects created with the
    ename:VK_IMAGE_USAGE_STORAGE_BIT usage flag.

ename:VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER::
    Identifies a uniform texel buffer descriptor which refers the state of a buffer view object. +
    A descriptor of this type enables shaders to perform reads of uniform texel data from the referenced
    buffer view. +

ename:VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER::
    Identifies a storage texel buffer descriptor which refers the state of a buffer view object. +
    A descriptor of this type enables shaders to perform loads, stores, and atomic operations on the
    texel data of the referenced buffer view. +

ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER::
    Identifies a uniform buffer descriptor which refers the state of a buffer view object. +
    A descriptor of this type enables shaders to perform reads of uniform block data in the
    referenced buffer and offset. +

ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER::
    Identifies a storage buffer descriptor which refers the state of a buffer view object. +
    A descriptor of this type enables shaders to perform loads, stores, and atomic operations of
    storage block data in the referenced buffer and offset. +

ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC::
    Identifies a uniform buffer descriptor with dynamic offset support. +
    The only difference compared to ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER is that descriptors of this
    type do not take their offset parameter from the buffer view's corresponding state, but instead
    allow the application to specify the offset value dynamically at the time the descriptor set
    containing the descriptor is bound using flink:vkCmdBindDescriptorSets.

ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC::
    Identifies a storage buffer descriptor with dynamic offset support. +
    The only difference compared to ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER is that descriptors of this
    type do not take their offset parameter from the buffer view's corresponding state, but instead
    allow the application to specify the offset value dynamically at the time the descriptor set
    containing the descriptor is bound using flink:vkCmdBindDescriptorSets.

ename:VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT::
    Identifies an input attachment descriptor which refers to the state of an attachment view
    object. +
    A descriptor of this type enables shaders to perform loads from images on the referenced
    attachment view. +
    This descriptor type is compatible with image views in any of the following layouts:
    ename:VK_IMAGE_LAYOUT_GENERAL or ename:VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL. This
    descriptor type is compatible with image views of image objects created with the
    ename:VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT usage flag.

Description
-----------

The constants of this enumeration are used to identify the type of the descriptors in various descriptor
set and descriptor pool handling commands.

See Also
--------

slink:VkDescriptorSetLayoutBinding

include::footer.txt[]
