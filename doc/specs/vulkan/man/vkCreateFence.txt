vkCreateFence(3)
=================

Name
----
vkCreateFence - Create a new fence object.

C Specification
---------------

include::../protos/vkCreateFence.txt[]

Parameters
----------

pname:device::
    A handle to the device with which to create the fence.

pname:pCreateInfo::
    A pointer to a structure containing information about how to create the fence.

pname:pFence::
    A pointer to a variable to receive the handle to the newly created fence object.

Description
-----------

fname:vkCreateFence creates a new fence object using the device specified by
pname:device and places the resulting object handle in the variable pointed to
by pname:pFence. Information about how the fence should be created is passed in
an instance of slink:VkFenceCreateInfo whose address is given in
pname:pCreateInfo. The definition of slink:VkFenceCreateInfo is:

include::../structs/VkFenceCreateInfo.txt[]

The pname:sType member of the slink:VkFenceCreateInfo structure should be set to
ename:VK_STRUCTURE_TYPE_FENCE_CREATE_INFO. The pname:pNext member is reserved
for use by extensions and should be set to code:NULL.

The pname:flags member specifies additional information about the fence to be
created. It is a bitfield made up from the members of the elink:VkFenceCreateFlagBits
enumeration, the definition of which is:

include::../enums/VkFenceCreateFlagBits.txt[]

If ename:VK_FENCE_CREATE_SIGNALED_BIT is set then the fence is created already
signaled, otherwise, the fence is created in an unsignaled state.

A fence becomes signaled when it is submitted to a queue with a call to
flink:vkQueueSubmit. A fence may be reset to unsignaled state with a call
to flink:vkResetFences.

include::../validity/protos/vkCreateFence.txt[]

See Also
--------

flink:vkWaitForFences, flink:vkDestroyFence, flink:vkResetFences, flink:vkQueueSubmit

include::footer.txt[]
