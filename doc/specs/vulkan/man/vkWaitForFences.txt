vkWaitForFences(3)
===================

Name
----
vkWaitForFences - Wait for one or more fences to become signaled.

C Specification
---------------

include::../protos/vkWaitForFences.txt[]

Parameters
----------

pname:device::
    The device owning the fences to be waited upon.

pname:fenceCount::
    The number of fences to wait on.

pname:pFences::
    The address of an array of fences to wait on.

pname:waitAll::
    If true, wait for all fences to become signaled. Otherwise, wait for at least one fence to become signaled.

pname:timeout::
    Timeout, in nanoseconds, to wait for fences to become signaled.

Description
-----------

fname:vkWaitForFences waits for one or more fences become signaled. pname:fenceCount is
the number of fences to wait on and pname:pFences is a pointer to an array of pname:fenceCount
fences. If pname:waitAll is code:VK_TRUE, then fname:vkWaitForFences waits for all fences in
the array to become signaled, otherwise it will return when any fence in the array becomes
signaled. If none of the fences are signaled before pname:timeout nanoseconds elapses,
then fname:vkWaitForFences will return without any fence necessarily becoming
signaled.

include::../validity/protos/vkWaitForFences.txt[]

Return Value
------------

Upon successful detection of a signaled fence, fname:vkWaitForFences returns ename:VK_SUCCESS.
If pname:timeout nanoseconds pass before any fence becomes signaled, fname:vkWaitForFences
returns ename:VK_TIMEOUT. Upon failure, a descriptive error code is returned.

See Also
--------

flink:vkCreateFence, flink:vkDestroyFence, flink:vkResetFences

include::footer.txt[]
