[[platformCreateSurface_android,platformCreateSurface_android]]

=== Android Platform

To create a sname:VkSurfaceKHR object for an Android native window, call:

include::../../protos/vkCreateAndroidSurfaceKHR.txt[]

  * pname:instance is the instance to associate the surface with.
  * pname:pCreateInfo is a pointer to an instance of the
    sname:VkAndroidSurfaceCreateInfoKHR structure containing parameters
    affecting the creation of the surface object.
  * pname:pAllocator is the allocator used for host memory allocated for the
    surface object when there is no more specific allocator available (see
    <<memory-allocation,Memory Allocation>>).
  * pname:pSurface points to a sname:VkSurfaceKHR handle in which the
    created surface object is returned.

include::../../validity/protos/vkCreateAndroidSurfaceKHR.txt[]

The definition of sname:VkAndroidSurfaceCreateInfoKHR is:

include::../../structs/VkAndroidSurfaceCreateInfoKHR.txt[]

The members of sname:VkAndroidSurfaceCreateInfoKHR have the following
meanings:

  * pname:sType is the type of this structure and must: be
    ename:VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR.
  * pname:pNext is `NULL` or a pointer to an extension-specific structure.
  * pname:flags is reserved for future use.
  * pname:window is a pointer to the ANativeWindow to associate the surface
    with.

include::../../validity/structs/VkAndroidSurfaceCreateInfoKHR.txt[]

During the lifetime of a surface created using a particular ANativeWindow
handle any attempts to create another surface for the same ANativeWindow and
any attempts to connect to the same ANativeWindow through other platform
mechanisms will fail.

[NOTE]
.NOTE
====
In particular, only one sname:VkSurfaceKHR can: exist at a time for a given
window.  Similarly, a native window cannot: be used by both a
sname:VkSurfaceKHR and EGLSurface simultaneously.
====

If successful, fname:vkCreateAndroidSurfaceKHR increments the ANativeWindow's
reference count, and fname:vkDestroySurfaceKHR will decrement it.

On Android, when a swapchain's pname:imageExtent does not match the surface's
pname:currentExtent, the swapchain images will be scaled to the surface's
dimensions during presentation.  pname:minImageExtent is latexmath:[$(1, 1)$],
and pname:maxImageExtent is the maximum image size supported by the consumer.
For the system compositor, pname:currentExtent is the window size (i.e. the
consumer's preferred size).
